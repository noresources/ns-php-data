<?php

/*
 * Generated from /home/renaud/Projects/ns-php-data/resources/antlr/Lua/Lua.g4 by ANTLR 4.11.1
 */

namespace NoreSources\Data\Parser\ANTLR\v41100\Lua {
	use Antlr\Antlr4\Runtime\Atn\ATNDeserializer;
	use Antlr\Antlr4\Runtime\Atn\LexerATNSimulator;
	use Antlr\Antlr4\Runtime\Lexer;
	use Antlr\Antlr4\Runtime\CharStream;
	use Antlr\Antlr4\Runtime\PredictionContexts\PredictionContextCache;
	use Antlr\Antlr4\Runtime\RuleContext;
	use Antlr\Antlr4\Runtime\Atn\ATN;
	use Antlr\Antlr4\Runtime\Dfa\DFA;
	use Antlr\Antlr4\Runtime\Vocabulary;
	use Antlr\Antlr4\Runtime\RuntimeMetaData;
	use Antlr\Antlr4\Runtime\VocabularyImpl;

	final class LuaLexer extends Lexer
	{
		public const SEMI = 1, EQ = 2, COMMA = 3, RETURN = 4, NIL = 5, FALSE = 6, 
               TRUE = 7, DOT = 8, OP = 9, CP = 10, OCU = 11, CCU = 12, OB = 13, 
               CB = 14, DD = 15, NAME = 16, NORMALSTRING = 17, CHARSTRING = 18, 
               LONGSTRING = 19, INT = 20, HEX = 21, FLOAT = 22, HEX_FLOAT = 23, 
               LINE_COMMENT = 24, BLOCK_COMMENT = 25, COMMENT = 26, WS = 27, 
               NL = 28;

		/**
		 * @var array<string>
		 */
		public const CHANNEL_NAMES = [
			'DEFAULT_TOKEN_CHANNEL', 'HIDDEN'
		];

		/**
		 * @var array<string>
		 */
		public const MODE_NAMES = [
			'DEFAULT_MODE'
		];

		/**
		 * @var array<string>
		 */
		public const RULE_NAMES = [
			'SEMI', 'EQ', 'COMMA', 'RETURN', 'NIL', 'FALSE', 'TRUE', 'DOT', 'OP', 
			'CP', 'OCU', 'CCU', 'OB', 'CB', 'DD', 'NAME', 'NORMALSTRING', 'CHARSTRING', 
			'LONGSTRING', 'NESTED_STR', 'INT', 'HEX', 'FLOAT', 'HEX_FLOAT', 'ExponentPart', 
			'HexExponentPart', 'EscapeSequence', 'DecimalEscape', 'HexEscape', 'UtfEscape', 
			'Digit', 'HexDigit', 'SingleLineInputCharacter', 'LINE_COMMENT', 'BLOCK_COMMENT', 
			'COMMENT', 'WS', 'NL'
		];

		/**
		 * @var array<string|null>
		 */
		private const LITERAL_NAMES = [
		    null, "';'", "'='", "','", "'return'", "'nil'", "'false'", "'true'", 
		    "'.'", "'('", "')'", "'{'", "'}'", "'['", "']'", "'..'"
		];

		/**
		 * @var array<string>
		 */
		private const SYMBOLIC_NAMES = [
		    null, "SEMI", "EQ", "COMMA", "RETURN", "NIL", "FALSE", "TRUE", "DOT", 
		    "OP", "CP", "OCU", "CCU", "OB", "CB", "DD", "NAME", "NORMALSTRING", 
		    "CHARSTRING", "LONGSTRING", "INT", "HEX", "FLOAT", "HEX_FLOAT", "LINE_COMMENT", 
		    "BLOCK_COMMENT", "COMMENT", "WS", "NL"
		];

		private const SERIALIZED_ATN =
			[4, 0, 28, 362, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3, 7, 3, 
		    2, 4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9, 
		    7, 9, 2, 10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14, 
		    7, 14, 2, 15, 7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 
		    19, 7, 19, 2, 20, 7, 20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 
		    2, 24, 7, 24, 2, 25, 7, 25, 2, 26, 7, 26, 2, 27, 7, 27, 2, 28, 7, 
		    28, 2, 29, 7, 29, 2, 30, 7, 30, 2, 31, 7, 31, 2, 32, 7, 32, 2, 33, 
		    7, 33, 2, 34, 7, 34, 2, 35, 7, 35, 2, 36, 7, 36, 2, 37, 7, 37, 1, 
		    0, 1, 0, 1, 1, 1, 1, 1, 2, 1, 2, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 
		    3, 1, 3, 1, 4, 1, 4, 1, 4, 1, 4, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 
		    5, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 7, 1, 7, 1, 8, 1, 8, 1, 9, 1, 
		    9, 1, 10, 1, 10, 1, 11, 1, 11, 1, 12, 1, 12, 1, 13, 1, 13, 1, 14, 
		    1, 14, 1, 14, 1, 15, 1, 15, 5, 15, 125, 8, 15, 10, 15, 12, 15, 128, 
		    9, 15, 1, 16, 1, 16, 1, 16, 5, 16, 133, 8, 16, 10, 16, 12, 16, 136, 
		    9, 16, 1, 16, 1, 16, 1, 17, 1, 17, 1, 17, 5, 17, 143, 8, 17, 10, 17, 
		    12, 17, 146, 9, 17, 1, 17, 1, 17, 1, 18, 1, 18, 1, 18, 1, 18, 1, 19, 
		    1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 5, 19, 160, 8, 19, 10, 19, 12, 
		    19, 163, 9, 19, 1, 19, 3, 19, 166, 8, 19, 1, 20, 4, 20, 169, 8, 20, 
		    11, 20, 12, 20, 170, 1, 21, 1, 21, 1, 21, 4, 21, 176, 8, 21, 11, 21, 
		    12, 21, 177, 1, 22, 4, 22, 181, 8, 22, 11, 22, 12, 22, 182, 1, 22, 
		    1, 22, 5, 22, 187, 8, 22, 10, 22, 12, 22, 190, 9, 22, 1, 22, 3, 22, 
		    193, 8, 22, 1, 22, 1, 22, 4, 22, 197, 8, 22, 11, 22, 12, 22, 198, 
		    1, 22, 3, 22, 202, 8, 22, 1, 22, 4, 22, 205, 8, 22, 11, 22, 12, 22, 
		    206, 1, 22, 1, 22, 3, 22, 211, 8, 22, 1, 23, 1, 23, 1, 23, 4, 23, 
		    216, 8, 23, 11, 23, 12, 23, 217, 1, 23, 1, 23, 5, 23, 222, 8, 23, 
		    10, 23, 12, 23, 225, 9, 23, 1, 23, 3, 23, 228, 8, 23, 1, 23, 1, 23, 
		    1, 23, 1, 23, 4, 23, 234, 8, 23, 11, 23, 12, 23, 235, 1, 23, 3, 23, 
		    239, 8, 23, 1, 23, 1, 23, 1, 23, 4, 23, 244, 8, 23, 11, 23, 12, 23, 
		    245, 1, 23, 1, 23, 3, 23, 250, 8, 23, 1, 24, 1, 24, 3, 24, 254, 8, 
		    24, 1, 24, 4, 24, 257, 8, 24, 11, 24, 12, 24, 258, 1, 25, 1, 25, 3, 
		    25, 263, 8, 25, 1, 25, 4, 25, 266, 8, 25, 11, 25, 12, 25, 267, 1, 
		    26, 1, 26, 1, 26, 1, 26, 3, 26, 274, 8, 26, 1, 26, 1, 26, 1, 26, 1, 
		    26, 3, 26, 280, 8, 26, 1, 27, 1, 27, 1, 27, 1, 27, 1, 27, 1, 27, 1, 
		    27, 1, 27, 1, 27, 1, 27, 1, 27, 3, 27, 293, 8, 27, 1, 28, 1, 28, 1, 
		    28, 1, 28, 1, 28, 1, 29, 1, 29, 1, 29, 1, 29, 1, 29, 4, 29, 305, 8, 
		    29, 11, 29, 12, 29, 306, 1, 29, 1, 29, 1, 30, 1, 30, 1, 31, 1, 31, 
		    1, 32, 1, 32, 1, 33, 1, 33, 1, 33, 1, 33, 5, 33, 321, 8, 33, 10, 33, 
		    12, 33, 324, 9, 33, 1, 33, 1, 33, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 
		    1, 34, 5, 34, 334, 8, 34, 10, 34, 12, 34, 337, 9, 34, 1, 34, 1, 34, 
		    1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 35, 1, 35, 3, 35, 348, 8, 35, 
		    1, 35, 1, 35, 1, 36, 4, 36, 353, 8, 36, 11, 36, 12, 36, 354, 1, 36, 
		    1, 36, 1, 37, 1, 37, 1, 37, 1, 37, 2, 161, 335, 0, 38, 1, 1, 3, 2, 
		    5, 3, 7, 4, 9, 5, 11, 6, 13, 7, 15, 8, 17, 9, 19, 10, 21, 11, 23, 
		    12, 25, 13, 27, 14, 29, 15, 31, 16, 33, 17, 35, 18, 37, 19, 39, 0, 
		    41, 20, 43, 21, 45, 22, 47, 23, 49, 0, 51, 0, 53, 0, 55, 0, 57, 0, 
		    59, 0, 61, 0, 63, 0, 65, 0, 67, 24, 69, 25, 71, 26, 73, 27, 75, 28, 
		    1, 0, 16, 3, 0, 65, 90, 95, 95, 97, 122, 4, 0, 48, 57, 65, 90, 95, 
		    95, 97, 122, 2, 0, 34, 34, 92, 92, 2, 0, 39, 39, 92, 92, 2, 0, 88, 
		    88, 120, 120, 2, 0, 69, 69, 101, 101, 2, 0, 43, 43, 45, 45, 2, 0, 
		    80, 80, 112, 112, 11, 0, 34, 36, 39, 39, 92, 92, 97, 98, 102, 102, 
		    110, 110, 114, 114, 116, 116, 118, 118, 122, 122, 124, 124, 1, 0, 
		    48, 50, 1, 0, 48, 57, 3, 0, 48, 57, 65, 70, 97, 102, 4, 0, 10, 10, 
		    13, 13, 133, 133, 8232, 8233, 2, 0, 10, 10, 13, 13, 3, 0, 9, 9, 12, 
		    13, 32, 32, 1, 0, 10, 10, 392, 0, 1, 1, 0, 0, 0, 0, 3, 1, 0, 0, 0, 
		    0, 5, 1, 0, 0, 0, 0, 7, 1, 0, 0, 0, 0, 9, 1, 0, 0, 0, 0, 11, 1, 0, 
		    0, 0, 0, 13, 1, 0, 0, 0, 0, 15, 1, 0, 0, 0, 0, 17, 1, 0, 0, 0, 0, 
		    19, 1, 0, 0, 0, 0, 21, 1, 0, 0, 0, 0, 23, 1, 0, 0, 0, 0, 25, 1, 0, 
		    0, 0, 0, 27, 1, 0, 0, 0, 0, 29, 1, 0, 0, 0, 0, 31, 1, 0, 0, 0, 0, 
		    33, 1, 0, 0, 0, 0, 35, 1, 0, 0, 0, 0, 37, 1, 0, 0, 0, 0, 41, 1, 0, 
		    0, 0, 0, 43, 1, 0, 0, 0, 0, 45, 1, 0, 0, 0, 0, 47, 1, 0, 0, 0, 0, 
		    67, 1, 0, 0, 0, 0, 69, 1, 0, 0, 0, 0, 71, 1, 0, 0, 0, 0, 73, 1, 0, 
		    0, 0, 0, 75, 1, 0, 0, 0, 1, 77, 1, 0, 0, 0, 3, 79, 1, 0, 0, 0, 5, 
		    81, 1, 0, 0, 0, 7, 83, 1, 0, 0, 0, 9, 90, 1, 0, 0, 0, 11, 94, 1, 0, 
		    0, 0, 13, 100, 1, 0, 0, 0, 15, 105, 1, 0, 0, 0, 17, 107, 1, 0, 0, 
		    0, 19, 109, 1, 0, 0, 0, 21, 111, 1, 0, 0, 0, 23, 113, 1, 0, 0, 0, 
		    25, 115, 1, 0, 0, 0, 27, 117, 1, 0, 0, 0, 29, 119, 1, 0, 0, 0, 31, 
		    122, 1, 0, 0, 0, 33, 129, 1, 0, 0, 0, 35, 139, 1, 0, 0, 0, 37, 149, 
		    1, 0, 0, 0, 39, 165, 1, 0, 0, 0, 41, 168, 1, 0, 0, 0, 43, 172, 1, 
		    0, 0, 0, 45, 210, 1, 0, 0, 0, 47, 249, 1, 0, 0, 0, 49, 251, 1, 0, 
		    0, 0, 51, 260, 1, 0, 0, 0, 53, 279, 1, 0, 0, 0, 55, 292, 1, 0, 0, 
		    0, 57, 294, 1, 0, 0, 0, 59, 299, 1, 0, 0, 0, 61, 310, 1, 0, 0, 0, 
		    63, 312, 1, 0, 0, 0, 65, 314, 1, 0, 0, 0, 67, 316, 1, 0, 0, 0, 69, 
		    327, 1, 0, 0, 0, 71, 347, 1, 0, 0, 0, 73, 352, 1, 0, 0, 0, 75, 358, 
		    1, 0, 0, 0, 77, 78, 5, 59, 0, 0, 78, 2, 1, 0, 0, 0, 79, 80, 5, 61, 
		    0, 0, 80, 4, 1, 0, 0, 0, 81, 82, 5, 44, 0, 0, 82, 6, 1, 0, 0, 0, 83, 
		    84, 5, 114, 0, 0, 84, 85, 5, 101, 0, 0, 85, 86, 5, 116, 0, 0, 86, 
		    87, 5, 117, 0, 0, 87, 88, 5, 114, 0, 0, 88, 89, 5, 110, 0, 0, 89, 
		    8, 1, 0, 0, 0, 90, 91, 5, 110, 0, 0, 91, 92, 5, 105, 0, 0, 92, 93, 
		    5, 108, 0, 0, 93, 10, 1, 0, 0, 0, 94, 95, 5, 102, 0, 0, 95, 96, 5, 
		    97, 0, 0, 96, 97, 5, 108, 0, 0, 97, 98, 5, 115, 0, 0, 98, 99, 5, 101, 
		    0, 0, 99, 12, 1, 0, 0, 0, 100, 101, 5, 116, 0, 0, 101, 102, 5, 114, 
		    0, 0, 102, 103, 5, 117, 0, 0, 103, 104, 5, 101, 0, 0, 104, 14, 1, 
		    0, 0, 0, 105, 106, 5, 46, 0, 0, 106, 16, 1, 0, 0, 0, 107, 108, 5, 
		    40, 0, 0, 108, 18, 1, 0, 0, 0, 109, 110, 5, 41, 0, 0, 110, 20, 1, 
		    0, 0, 0, 111, 112, 5, 123, 0, 0, 112, 22, 1, 0, 0, 0, 113, 114, 5, 
		    125, 0, 0, 114, 24, 1, 0, 0, 0, 115, 116, 5, 91, 0, 0, 116, 26, 1, 
		    0, 0, 0, 117, 118, 5, 93, 0, 0, 118, 28, 1, 0, 0, 0, 119, 120, 5, 
		    46, 0, 0, 120, 121, 5, 46, 0, 0, 121, 30, 1, 0, 0, 0, 122, 126, 7, 
		    0, 0, 0, 123, 125, 7, 1, 0, 0, 124, 123, 1, 0, 0, 0, 125, 128, 1, 
		    0, 0, 0, 126, 124, 1, 0, 0, 0, 126, 127, 1, 0, 0, 0, 127, 32, 1, 0, 
		    0, 0, 128, 126, 1, 0, 0, 0, 129, 134, 5, 34, 0, 0, 130, 133, 3, 53, 
		    26, 0, 131, 133, 8, 2, 0, 0, 132, 130, 1, 0, 0, 0, 132, 131, 1, 0, 
		    0, 0, 133, 136, 1, 0, 0, 0, 134, 132, 1, 0, 0, 0, 134, 135, 1, 0, 
		    0, 0, 135, 137, 1, 0, 0, 0, 136, 134, 1, 0, 0, 0, 137, 138, 5, 34, 
		    0, 0, 138, 34, 1, 0, 0, 0, 139, 144, 5, 39, 0, 0, 140, 143, 3, 53, 
		    26, 0, 141, 143, 8, 3, 0, 0, 142, 140, 1, 0, 0, 0, 142, 141, 1, 0, 
		    0, 0, 143, 146, 1, 0, 0, 0, 144, 142, 1, 0, 0, 0, 144, 145, 1, 0, 
		    0, 0, 145, 147, 1, 0, 0, 0, 146, 144, 1, 0, 0, 0, 147, 148, 5, 39, 
		    0, 0, 148, 36, 1, 0, 0, 0, 149, 150, 5, 91, 0, 0, 150, 151, 3, 39, 
		    19, 0, 151, 152, 5, 93, 0, 0, 152, 38, 1, 0, 0, 0, 153, 154, 5, 61, 
		    0, 0, 154, 155, 3, 39, 19, 0, 155, 156, 5, 61, 0, 0, 156, 166, 1, 
		    0, 0, 0, 157, 161, 5, 91, 0, 0, 158, 160, 9, 0, 0, 0, 159, 158, 1, 
		    0, 0, 0, 160, 163, 1, 0, 0, 0, 161, 162, 1, 0, 0, 0, 161, 159, 1, 
		    0, 0, 0, 162, 164, 1, 0, 0, 0, 163, 161, 1, 0, 0, 0, 164, 166, 5, 
		    93, 0, 0, 165, 153, 1, 0, 0, 0, 165, 157, 1, 0, 0, 0, 166, 40, 1, 
		    0, 0, 0, 167, 169, 3, 61, 30, 0, 168, 167, 1, 0, 0, 0, 169, 170, 1, 
		    0, 0, 0, 170, 168, 1, 0, 0, 0, 170, 171, 1, 0, 0, 0, 171, 42, 1, 0, 
		    0, 0, 172, 173, 5, 48, 0, 0, 173, 175, 7, 4, 0, 0, 174, 176, 3, 63, 
		    31, 0, 175, 174, 1, 0, 0, 0, 176, 177, 1, 0, 0, 0, 177, 175, 1, 0, 
		    0, 0, 177, 178, 1, 0, 0, 0, 178, 44, 1, 0, 0, 0, 179, 181, 3, 61, 
		    30, 0, 180, 179, 1, 0, 0, 0, 181, 182, 1, 0, 0, 0, 182, 180, 1, 0, 
		    0, 0, 182, 183, 1, 0, 0, 0, 183, 184, 1, 0, 0, 0, 184, 188, 5, 46, 
		    0, 0, 185, 187, 3, 61, 30, 0, 186, 185, 1, 0, 0, 0, 187, 190, 1, 0, 
		    0, 0, 188, 186, 1, 0, 0, 0, 188, 189, 1, 0, 0, 0, 189, 192, 1, 0, 
		    0, 0, 190, 188, 1, 0, 0, 0, 191, 193, 3, 49, 24, 0, 192, 191, 1, 0, 
		    0, 0, 192, 193, 1, 0, 0, 0, 193, 211, 1, 0, 0, 0, 194, 196, 5, 46, 
		    0, 0, 195, 197, 3, 61, 30, 0, 196, 195, 1, 0, 0, 0, 197, 198, 1, 0, 
		    0, 0, 198, 196, 1, 0, 0, 0, 198, 199, 1, 0, 0, 0, 199, 201, 1, 0, 
		    0, 0, 200, 202, 3, 49, 24, 0, 201, 200, 1, 0, 0, 0, 201, 202, 1, 0, 
		    0, 0, 202, 211, 1, 0, 0, 0, 203, 205, 3, 61, 30, 0, 204, 203, 1, 0, 
		    0, 0, 205, 206, 1, 0, 0, 0, 206, 204, 1, 0, 0, 0, 206, 207, 1, 0, 
		    0, 0, 207, 208, 1, 0, 0, 0, 208, 209, 3, 49, 24, 0, 209, 211, 1, 0, 
		    0, 0, 210, 180, 1, 0, 0, 0, 210, 194, 1, 0, 0, 0, 210, 204, 1, 0, 
		    0, 0, 211, 46, 1, 0, 0, 0, 212, 213, 5, 48, 0, 0, 213, 215, 7, 4, 
		    0, 0, 214, 216, 3, 63, 31, 0, 215, 214, 1, 0, 0, 0, 216, 217, 1, 0, 
		    0, 0, 217, 215, 1, 0, 0, 0, 217, 218, 1, 0, 0, 0, 218, 219, 1, 0, 
		    0, 0, 219, 223, 5, 46, 0, 0, 220, 222, 3, 63, 31, 0, 221, 220, 1, 
		    0, 0, 0, 222, 225, 1, 0, 0, 0, 223, 221, 1, 0, 0, 0, 223, 224, 1, 
		    0, 0, 0, 224, 227, 1, 0, 0, 0, 225, 223, 1, 0, 0, 0, 226, 228, 3, 
		    51, 25, 0, 227, 226, 1, 0, 0, 0, 227, 228, 1, 0, 0, 0, 228, 250, 1, 
		    0, 0, 0, 229, 230, 5, 48, 0, 0, 230, 231, 7, 4, 0, 0, 231, 233, 5, 
		    46, 0, 0, 232, 234, 3, 63, 31, 0, 233, 232, 1, 0, 0, 0, 234, 235, 
		    1, 0, 0, 0, 235, 233, 1, 0, 0, 0, 235, 236, 1, 0, 0, 0, 236, 238, 
		    1, 0, 0, 0, 237, 239, 3, 51, 25, 0, 238, 237, 1, 0, 0, 0, 238, 239, 
		    1, 0, 0, 0, 239, 250, 1, 0, 0, 0, 240, 241, 5, 48, 0, 0, 241, 243, 
		    7, 4, 0, 0, 242, 244, 3, 63, 31, 0, 243, 242, 1, 0, 0, 0, 244, 245, 
		    1, 0, 0, 0, 245, 243, 1, 0, 0, 0, 245, 246, 1, 0, 0, 0, 246, 247, 
		    1, 0, 0, 0, 247, 248, 3, 51, 25, 0, 248, 250, 1, 0, 0, 0, 249, 212, 
		    1, 0, 0, 0, 249, 229, 1, 0, 0, 0, 249, 240, 1, 0, 0, 0, 250, 48, 1, 
		    0, 0, 0, 251, 253, 7, 5, 0, 0, 252, 254, 7, 6, 0, 0, 253, 252, 1, 
		    0, 0, 0, 253, 254, 1, 0, 0, 0, 254, 256, 1, 0, 0, 0, 255, 257, 3, 
		    61, 30, 0, 256, 255, 1, 0, 0, 0, 257, 258, 1, 0, 0, 0, 258, 256, 1, 
		    0, 0, 0, 258, 259, 1, 0, 0, 0, 259, 50, 1, 0, 0, 0, 260, 262, 7, 7, 
		    0, 0, 261, 263, 7, 6, 0, 0, 262, 261, 1, 0, 0, 0, 262, 263, 1, 0, 
		    0, 0, 263, 265, 1, 0, 0, 0, 264, 266, 3, 61, 30, 0, 265, 264, 1, 0, 
		    0, 0, 266, 267, 1, 0, 0, 0, 267, 265, 1, 0, 0, 0, 267, 268, 1, 0, 
		    0, 0, 268, 52, 1, 0, 0, 0, 269, 270, 5, 92, 0, 0, 270, 280, 7, 8, 
		    0, 0, 271, 273, 5, 92, 0, 0, 272, 274, 5, 13, 0, 0, 273, 272, 1, 0, 
		    0, 0, 273, 274, 1, 0, 0, 0, 274, 275, 1, 0, 0, 0, 275, 280, 5, 10, 
		    0, 0, 276, 280, 3, 55, 27, 0, 277, 280, 3, 57, 28, 0, 278, 280, 3, 
		    59, 29, 0, 279, 269, 1, 0, 0, 0, 279, 271, 1, 0, 0, 0, 279, 276, 1, 
		    0, 0, 0, 279, 277, 1, 0, 0, 0, 279, 278, 1, 0, 0, 0, 280, 54, 1, 0, 
		    0, 0, 281, 282, 5, 92, 0, 0, 282, 293, 3, 61, 30, 0, 283, 284, 5, 
		    92, 0, 0, 284, 285, 3, 61, 30, 0, 285, 286, 3, 61, 30, 0, 286, 293, 
		    1, 0, 0, 0, 287, 288, 5, 92, 0, 0, 288, 289, 7, 9, 0, 0, 289, 290, 
		    3, 61, 30, 0, 290, 291, 3, 61, 30, 0, 291, 293, 1, 0, 0, 0, 292, 281, 
		    1, 0, 0, 0, 292, 283, 1, 0, 0, 0, 292, 287, 1, 0, 0, 0, 293, 56, 1, 
		    0, 0, 0, 294, 295, 5, 92, 0, 0, 295, 296, 5, 120, 0, 0, 296, 297, 
		    3, 63, 31, 0, 297, 298, 3, 63, 31, 0, 298, 58, 1, 0, 0, 0, 299, 300, 
		    5, 92, 0, 0, 300, 301, 5, 117, 0, 0, 301, 302, 5, 123, 0, 0, 302, 
		    304, 1, 0, 0, 0, 303, 305, 3, 63, 31, 0, 304, 303, 1, 0, 0, 0, 305, 
		    306, 1, 0, 0, 0, 306, 304, 1, 0, 0, 0, 306, 307, 1, 0, 0, 0, 307, 
		    308, 1, 0, 0, 0, 308, 309, 5, 125, 0, 0, 309, 60, 1, 0, 0, 0, 310, 
		    311, 7, 10, 0, 0, 311, 62, 1, 0, 0, 0, 312, 313, 7, 11, 0, 0, 313, 
		    64, 1, 0, 0, 0, 314, 315, 8, 12, 0, 0, 315, 66, 1, 0, 0, 0, 316, 317, 
		    5, 45, 0, 0, 317, 318, 5, 45, 0, 0, 318, 322, 1, 0, 0, 0, 319, 321, 
		    8, 13, 0, 0, 320, 319, 1, 0, 0, 0, 321, 324, 1, 0, 0, 0, 322, 320, 
		    1, 0, 0, 0, 322, 323, 1, 0, 0, 0, 323, 325, 1, 0, 0, 0, 324, 322, 
		    1, 0, 0, 0, 325, 326, 6, 33, 0, 0, 326, 68, 1, 0, 0, 0, 327, 328, 
		    5, 45, 0, 0, 328, 329, 5, 45, 0, 0, 329, 330, 5, 91, 0, 0, 330, 331, 
		    5, 91, 0, 0, 331, 335, 1, 0, 0, 0, 332, 334, 9, 0, 0, 0, 333, 332, 
		    1, 0, 0, 0, 334, 337, 1, 0, 0, 0, 335, 336, 1, 0, 0, 0, 335, 333, 
		    1, 0, 0, 0, 336, 338, 1, 0, 0, 0, 337, 335, 1, 0, 0, 0, 338, 339, 
		    5, 45, 0, 0, 339, 340, 5, 45, 0, 0, 340, 341, 5, 93, 0, 0, 341, 342, 
		    5, 93, 0, 0, 342, 343, 1, 0, 0, 0, 343, 344, 6, 34, 0, 0, 344, 70, 
		    1, 0, 0, 0, 345, 348, 3, 67, 33, 0, 346, 348, 3, 69, 34, 0, 347, 345, 
		    1, 0, 0, 0, 347, 346, 1, 0, 0, 0, 348, 349, 1, 0, 0, 0, 349, 350, 
		    6, 35, 0, 0, 350, 72, 1, 0, 0, 0, 351, 353, 7, 14, 0, 0, 352, 351, 
		    1, 0, 0, 0, 353, 354, 1, 0, 0, 0, 354, 352, 1, 0, 0, 0, 354, 355, 
		    1, 0, 0, 0, 355, 356, 1, 0, 0, 0, 356, 357, 6, 36, 0, 0, 357, 74, 
		    1, 0, 0, 0, 358, 359, 7, 15, 0, 0, 359, 360, 1, 0, 0, 0, 360, 361, 
		    6, 37, 1, 0, 361, 76, 1, 0, 0, 0, 36, 0, 126, 132, 134, 142, 144, 
		    161, 165, 170, 177, 182, 188, 192, 198, 201, 206, 210, 217, 223, 227, 
		    235, 238, 245, 249, 253, 258, 262, 267, 273, 279, 292, 306, 322, 335, 
		    347, 354, 2, 0, 1, 0, 0, 2, 0];
		protected static $atn;
		protected static $decisionToDFA;
		protected static $sharedContextCache;
		public function __construct(CharStream $input)
		{
			parent::__construct($input);

			self::initialize();

			$this->interp = new LexerATNSimulator($this, self::$atn, self::$decisionToDFA, self::$sharedContextCache);
		}

		private static function initialize(): void
		{
			if (self::$atn !== null) {
				return;
			}

			RuntimeMetaData::checkVersion('4.11.1', RuntimeMetaData::VERSION);

			$atn = (new ATNDeserializer())->deserialize(self::SERIALIZED_ATN);

			$decisionToDFA = [];
			for ($i = 0, $count = $atn->getNumberOfDecisions(); $i < $count; $i++) {
				$decisionToDFA[] = new DFA($atn->getDecisionState($i), $i);
			}

			self::$atn = $atn;
			self::$decisionToDFA = $decisionToDFA;
			self::$sharedContextCache = new PredictionContextCache();
		}

		public static function vocabulary(): Vocabulary
		{
			static $vocabulary;

			return $vocabulary = $vocabulary ?? new VocabularyImpl(self::LITERAL_NAMES, self::SYMBOLIC_NAMES);
		}

		public function getGrammarFileName(): string
		{
			return 'Lua.g4';
		}

		public function getRuleNames(): array
		{
			return self::RULE_NAMES;
		}

		public function getSerializedATN(): array
		{
			return self::SERIALIZED_ATN;
		}

		/**
		 * @return array<string>
		 */
		public function getChannelNames(): array
		{
			return self::CHANNEL_NAMES;
		}

		/**
		 * @return array<string>
		 */
		public function getModeNames(): array
		{
			return self::MODE_NAMES;
		}

		public function getATN(): ATN
		{
			return self::$atn;
		}

		public function getVocabulary(): Vocabulary
		{
			return self::vocabulary();
		}
	}
}